#ifndef __ROADSEGMENT_H__
#define __ROADSEGMENT_H__
#include "Globals.h"
#include "Point.h"
#include "RoadLine.h"

#include <vector>

using namespace std;

#define S_FAT_A_1 vector<SDL_Rect>{ T_GRASS, T_BUSH_A1, T_RECT_A1, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_RECT_B2, T_BUSH_A2, T_GRASS }
#define S_FAT_A_2 vector<SDL_Rect>{ T_GRASS, T_BUSH_B1, T_RECT_B1, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_RECT_A2, T_BUSH_B2, T_GRASS }
#define S_FAT_A_3 vector<SDL_Rect>{ T_GRASS, T_BUSH_A2, T_RECT_A1, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_RECT_A2, T_BUSH_A1, T_GRASS }
#define S_FAT_A_4 vector<SDL_Rect>{ T_GRASS, T_BUSH_B2, T_RECT_B1, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_RECT_B2, T_BUSH_B1, T_GRASS }


#define S_CUR_LC_8 vector<SDL_Rect>{ T_TREE_B2, T_GRASS, T_GRASS, T_GRASS, T_RECT_A1, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_RCURR3_A2, T_GCURR3_A2 , T_TREE_D1 , T_TREE_D2 , T_TREE_D2, T_GRASS } 
#define S_CUR_LC_7 vector<SDL_Rect>{ T_GRASS, T_TREE_B1, T_TREE_B2, T_GCURR2_A1, T_RCURR2_A1, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_RCURR3_B2, T_GCURR3_B2, T_GRASS, T_GRASS, T_GRASS, T_GRASS } 
#define S_CUR_LC_6 vector<SDL_Rect>{ T_GRASS, T_GRASS, T_GRASS, T_GCURR2_B1, T_RCURR2_B1, T_ROAD, T_ROAD, T_ROAD, T_GCURR3_C2, T_RCURR3_C2, T_GRASS, T_GRASS, T_GRASS, T_TREE_E1, T_TREE_E2 } 
#define S_CUR_LC_5 vector<SDL_Rect>{ T_TREE_D1, T_TREE_D2, T_GCURR3_B1, T_RCURR3_B1, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_RCURR2_B2, T_GCURR2_B2, T_GRASS, T_TREE_D1, T_TREE_D2, T_GRASS, T_GRASS }
#define S_CUR_LC_4 vector<SDL_Rect>{ T_TREE_E2, T_GRASS, T_GCURR3_A1, T_RCURR3_A1, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_RCURR2_A2, T_GCURR2_A2, T_GRASS, T_GRASS, T_TREE_C1, T_TREE_C2,  T_GRASS } 
#define S_CUR_LC_3 vector<SDL_Rect>{ T_GRASS, T_GRASS, T_RCURR3_C1,T_GCURR3_C1, T_ROAD, T_ROAD, T_ROAD, T_RCURR3_A2, T_GCURR3_A2, T_GRASS, T_GRASS, T_TREE_C1, T_TREE_C2, T_GRASS, T_GRASS, T_GRASS }
#define S_CUR_LC_2 vector<SDL_Rect>{ T_TREE_C2, T_GCURR2_A1, T_RCURR2_A1, T_ROAD, T_ROAD, T_ROAD, T_ROAD, T_RCURR3_B2, T_GCURR3_B2, T_GRASS, T_GRASS, T_GRASS, T_GRASS, T_TREE_D1, T_TREE_D2} 
#define S_CUR_LC_1 vector<SDL_Rect>{ T_GRASS, T_GCURR2_B1, T_RCURR2_B1, T_ROAD, T_ROAD, T_ROAD, T_GCURR3_C2, T_RCURR3_C2, T_GRASS, T_TREE_E1, T_TREE_E2, T_GRASS, T_GRASS, T_GRASS, T_GRASS} 


#define C_FAT vector<Collider*>{ new Collider({ RTILE_WIDTH * 1, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, App->road),  new Collider({ RTILE_WIDTH * 2, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, App->road),  new Collider({ RTILE_WIDTH * 12, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, App->road), new Collider({ RTILE_WIDTH * 13, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, App->road) }

#define C_THIN vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}
#define C_THIN_L vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}
#define C_THIN_R vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 6, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 7, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 14, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}
#define C_2_ROADS vector<Collider*>{ 
new Collider({ 2, RTILE_HEIGHT, 2, 0 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 14, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ (RTILE_WIDTH * 15) - 2, 0, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}
#define C_BRIDGE vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}
#define C_BRIDGE_L vector<Collider*>{ 
new Collider({ 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}
#define C_BRIDGE_R vector<Collider*>{ 
new Collider({ 0 * 6, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 7, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 14, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}
#define C_2_BRIDGES vector<Collider*>{ 
new Collider({ 0, 0, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 14, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ (RTILE_WIDTH * 15) - 2, 0, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}
#define C_POST_2_BRIDGES_1 vector<Collider*>{ 
new Collider({ 0, 0, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 8, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 6, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 4, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 2, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 8, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 6, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 4, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 2, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 22, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 24, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 28, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 30, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 22, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 24, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 28, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 30, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 14, RTILE_HEIGHT, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ (RTILE_WIDTH * 15) - 2, RTILE_HEIGHT, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}
{11, 10, 11, 11, 10, 11}
#define C_POST_2_BRIDGES_2 vector<Collider*>{ 
new Collider({ 0, 0, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 20, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 18, 13, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 16, 26, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 14, 38, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 12, 51, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 10, 51, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 20, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 18, 13, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 16, 26, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 14, 38, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 12, 51, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 10, 51, 2, 11 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 10, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 12, 13, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 14, 26, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 16, 38, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 18, 51, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 20, 51, 2, 11 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 10, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 12, 13, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 14, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 16, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 18, 51, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 20, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 14, RTILE_HEIGHT, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ (RTILE_WIDTH * 15) - 2, RTILE_HEIGHT, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}

{12, 13, 12, 13, 12}]
#define C_POST_2_BRIDGES_3 vector<Collider*>{ 
new Collider({ 0, 0, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 2, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 4, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 6, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 8, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 9, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 2, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 4, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 6, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 8, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 14, RTILE_HEIGHT, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ (RTILE_WIDTH * 15) - 2, RTILE_HEIGHT, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}


#define C_PRE_2_BRIDGES_1 vector<Collider*>{ 
new Collider({ 0, 0, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 30, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 28, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 30, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 28, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 2, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 9, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 2, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 14, RTILE_HEIGHT, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ (RTILE_WIDTH * 15) - 2, RTILE_HEIGHT, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}

#define C_PRE_2_BRIDGES_2 vector<Collider*>{ 
new Collider({ 0, 0, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 26, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 24, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 26, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 24, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 4, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 6, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 4, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 6, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 14, RTILE_HEIGHT, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ (RTILE_WIDTH * 15) - 2, RTILE_HEIGHT, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}

#define C_PRE_2_BRIDGES_3 vector<Collider*>{ 
new Collider({ 0, 0, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 22, 0, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 20, 13, 2, 22 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 18, 13, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 22, 0, 2, 21 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 20, 13, 2, 22 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 18, 13, 2, 21 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 8, 0, 2, 21 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 10, 13, 2, 22 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 12, 13, 2, 21 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 8, 0, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 10, 13, 2, 22 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 12, 13, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 14, RTILE_HEIGHT, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ (RTILE_WIDTH * 15) - 2, RTILE_HEIGHT, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}

#define C_PRE_2_BRIDGES_4 vector<Collider*>{ 
new Collider({ 0, 0, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 16, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 14, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 16, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 14, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 14, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 16, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 14, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 16, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 14, RTILE_HEIGHT, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ (RTILE_WIDTH * 15) - 2, RTILE_HEIGHT, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}

#define C_PRE_2_BRIDGES_5 vector<Collider*>{ 
new Collider({ 0, 0, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 12, 0, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 10, 13, 2, 22 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 8, 13, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 12, 0, 2, 21 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 10, 13, 2, 22 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 8, 13, 2, 21 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 18, 0, 2, 21 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 20, 13, 2, 22 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 22, 13, 2, 21 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 18, 0, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 20, 13, 2, 22 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 22, 13, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 14, RTILE_HEIGHT, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ (RTILE_WIDTH * 15) - 2, RTILE_HEIGHT, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}


#define C_PRE_2_BRIDGES_6 vector<Collider*>{ 
new Collider({ 0, 0, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 6, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 4, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 6, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 4, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 24, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 26, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 24, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 26, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 14, RTILE_HEIGHT, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ (RTILE_WIDTH * 15) - 2, RTILE_HEIGHT, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}

#define C_PRE_2_BRIDGES_7 vector<Collider*>{ 
new Collider({ 0, 0, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 2, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 2, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 28, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 30, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 28, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 30, 13RTILE_HEIGHT / 2 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 14, RTILE_HEIGHT, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ (RTILE_WIDTH * 15) - 2, RTILE_HEIGHT, 2, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}


#define C_OPEN_1 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 10 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_OPEN_2 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 20, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 18, 13, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 16, 26, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 14, 38, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 12, 51, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 10, 51, 2, 11 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 20, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 18, 13, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 16, 26, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 14, 38, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 12, 51, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 10, 51, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 10 + 10, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 12, 13, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 14, 26, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 16, 38, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 18, 51, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 20, 51, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 10, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 12, 13, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 14, 26, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 16, 38, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 18, 51, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 20, 51, 2, 11 }, COL_ROAD_OUT, ModuleRoad)}

#define C_OPEN_3 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 10 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad)}

#define C_OPEN_4 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}

#define C_OPEN_5 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 3 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_OPEN_6 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2 + 20, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 18, 13, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 16, 26, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 14, 38, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 12, 51, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 10, 51, 2, 11 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 3 + 20, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 18, 13, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 16, 26, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 14, 38, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 12, 51, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 10, 51, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 10, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 12, 13, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 14, 26, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 16, 38, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 18, 51, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 20, 51, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 10, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 12, 13, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 14, 26, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 16, 38, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 18, 51, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 20, 51, 2, 11 }, COL_ROAD_OUT, ModuleRoad)}

#define C_OPEN_7 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 3 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad)}


#define C_BIF_1 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 1 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 2 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_BIF_2 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 1 + 20, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 18, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 16, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 14, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 12, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 10, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 2 + 20, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 18, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 16, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 14, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 12, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 10, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 10, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 12, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 14, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 16, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 18, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 20, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 10, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 12, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 14, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 16, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 18, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 20, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad)}

#define C_BIF_3 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 1 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 2 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_BIF_4 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 0 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 1 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 7, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 14 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 14 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 14 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 14 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 14 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_BIF_5 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 0 + 20, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0 + 18, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0 + 16, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0 + 14, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0 + 12, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0 + 10, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 1 + 20, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 18, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 16, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 14, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 12, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 10, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 20, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 18, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 16, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 14, 32, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 10, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 7, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 10, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 12, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 14, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 16, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 18, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 20, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 10, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 12, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 14, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 16, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 18, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 20, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 14 + 10, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 14 + 12, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 14 + 14, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 14 + 16, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 14 + 18, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 14 + 20, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad)}

#define C_BIF_6 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 0 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 0 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 1 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 7, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 14 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 14 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 14 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 14 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 14 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CLOSE_1 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 2, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 3, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 2, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 30, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 28, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 30, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 28, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CLOSE_2 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2 + 4, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 6, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 3 + 4, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 6, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 26, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 24, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 26, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 24, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CLOSE_3 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2 + 8, 0, 2, 21 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 10, 21, 2, 22 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 12, 43 2, 21 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 3 + 8, 0, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 10, 21, 2, 22 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 12, 43 2, 21 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 22, 0, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 20, 21, 2, 22 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 18, 43, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 22, 0, 2, 21 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 20, 21, 2, 22 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 18, 43, 2, 21 }, COL_ROAD_OUT, ModuleRoad),

#define C_CLOSE_4 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2 + 14, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 16, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 3 + 14, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 16, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 16, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 14, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 16, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 14, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad) }

#define C_CLOSE_5 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2 + 18, 0, 2, 21 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 20, 21, 2, 22 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 22, 43 2, 21 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 3 + 18, 0, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 20, 21, 2, 22 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 22, 43 2, 21 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 12, 0, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 10, 21, 2, 22 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 8, 43, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 12, 0, 2, 21 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 10, 21, 2, 22 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 8, 43, 2, 21 }, COL_ROAD_OUT, ModuleRoad),

#define C_CLOSE_6 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2 + 24, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 26, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 3 + 24, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 26, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 6, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 4, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 6, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 4, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad) }

#define C_CLOSE_7 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2 + 24, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 26, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 3 + 24, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 26, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 6, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 4, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 6, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 4, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CLOSE_8 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}

#define C_CLOSE_9 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 2, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 2, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 30, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 28, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 30, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 28, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CLOSE_10 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 4, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 6, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 4, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 6, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 26, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 24, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 26, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 24, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CLOSE_11 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 8, 0, 2, 21 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 10, 21, 2, 22 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 12, 43 2, 21 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 8, 0, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 10, 21, 2, 22 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 12, 43 2, 21 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 22, 0, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 20, 21, 2, 22 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 18, 43, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 22, 0, 2, 21 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 20, 21, 2, 22 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 18, 43, 2, 21 }, COL_ROAD_OUT, ModuleRoad),

#define C_CLOSE_12 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 14, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 16, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 14, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 16, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 16, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 14, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 16, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 14, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad) }

#define C_CLOSE_13 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 18, 0, 2, 21 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 20, 21, 2, 22 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 22, 43 2, 21 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 18, 0, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 20, 21, 2, 22 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 22, 43 2, 21 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 12, 0, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 10, 21, 2, 22 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 8, 43, 2, 21 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 12, 0, 2, 21 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 10, 21, 2, 22 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 8, 43, 2, 21 }, COL_ROAD_OUT, ModuleRoad),

#define C_CLOSE_14 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 24, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 26, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 24, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 26, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 6, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 4, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 6, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 4, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad) }

#define C_CLOSE_15 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 24, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 26, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 24, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 26, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 6, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 4, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 6, 0, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 4, RTILE_HEIGHT / 2, 2, RTILE_HEIGHT / 2 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CL_1 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 22, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 24, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 28, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 30, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 22, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 24, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 28, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 30, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 16, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 18, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 20, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 22, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 24, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 26, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 28, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 30, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 10 + 16, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 18, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 20, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 22, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 24, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 26, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 28, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 30, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CL_2 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 10, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 12, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 14, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 16, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 18, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 20, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 10, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 12, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 14, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 16, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 18, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 20, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad)

new Collider({ RTILE_WIDTH * 9, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 2, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 4, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 6, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 8, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 12, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 14, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 10, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 2, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 4, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 6, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 8, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 10, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 12, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 14, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CL_3 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 22, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 24, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 28, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 30, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 22, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 24, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 28, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 30, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CL_4 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2 + 16, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 18, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 20, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 22, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 24, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 26, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 28, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 30, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad)

new Collider({ RTILE_WIDTH * 3 + 16, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 18, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 20, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 22, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 24, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 26, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 28, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 30, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 10, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 12, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 14, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 16, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 18, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 20, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad)

new Collider({ RTILE_WIDTH * 9 + 10, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 12, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 14, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 16, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 18, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 20, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CL_5 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 2, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 4, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 6, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 8, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 10, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 12, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 14, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 3, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 2, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 4, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 6, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 8, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 12, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 14, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CL_6 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 1 + 22, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 24, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 28, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 30, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 2 + 22, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 24, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 28, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 30, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 7 + 16, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 18, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 20, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 22, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 24, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 26, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 28, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 30, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 16, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 18, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 20, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 22, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 24, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 26, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 28, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 30, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CL_7 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 1 + 10, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 12, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 14, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 16, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 18, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 20, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 2 + 10, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 12, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 14, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 16, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 18, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 20, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 7, 16, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 18, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 20, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 22, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 24, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 26, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 28, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 30, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 8, 16, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 18, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 20, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 22, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 24, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 26, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 28, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 30, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad)}


new Collider({ RTILE_WIDTH * 7, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 2, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 4, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 6, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 8, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 12, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 14, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 8, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 2, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 4, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 6, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 8, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 10, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 12, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 14, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CL_8 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 1 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 2 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 7, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 8, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_RC_1 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 6 + 22, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 24, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 28, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 30, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 7 + 22, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 24, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 28, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 30, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 16, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 18, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 20, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 22, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 24, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 26, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 28, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 30, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 16, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 18, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 20, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 22, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 24, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 26, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 28, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 30, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_RC_2 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 6 + 10, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 12, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 14, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 16, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 18, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 20, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 7 + 10, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 12, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 14, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 16, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 18, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 20, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad)

new Collider({ RTILE_WIDTH * 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 2, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 4, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 6, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 8, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 12, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 14, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 2, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 4, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 6, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 8, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 10, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 12, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 14, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_RC_3 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 6 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 7 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 22, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 24, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 28, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 30, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 22, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 24, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 28, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 30, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_RC_4 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 5 + 16, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 18, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 20, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 22, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 24, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 26, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 28, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 30, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad)

new Collider({ RTILE_WIDTH * 6 + 16, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 18, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 20, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 22, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 24, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 26, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 28, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 30, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 10, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 12, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 14, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 16, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 18, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 20, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad)

new Collider({ RTILE_WIDTH * 12 + 10, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 12, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 14, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 16, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 18, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 20, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_RC_5 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 5, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 2, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 4, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 6, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 8, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 10, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 12, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 14, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 6, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 2, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 4, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 6, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 8, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 12, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 14, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_RC_6 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 4 + 22, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 24, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 28, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 30, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 22, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 24, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 28, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 30, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 10 + 16, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 18, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 20, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 22, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 24, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 26, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 28, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 30, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 16, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 18, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 20, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 22, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 24, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 26, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 28, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 30, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_RC_7 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 4 + 10, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 12, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 14, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 16, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 18, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 20, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 10, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 12, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 14, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 16, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 18, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 20, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 2, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 4, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 6, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 8, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 12, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 14, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 2, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 4, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 6, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 8, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 10, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 12, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 14, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_RC_8 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 4 + 2, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 4, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 6, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 8, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 2, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 4, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 6, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 8, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 10, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CR_1 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 4 + 14, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 12, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 10, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 8, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 6, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 4, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 2, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 14, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 12, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 8, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 6, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 4, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 2, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 10 + 8, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 6, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 4, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 2, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 8, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 6, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 4, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 2, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CR_2 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 4 + 30, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 28, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 26, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 24, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 22, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 20, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 18, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 16, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 5 + 30, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 28, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 26, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 24, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 22, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 20, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 18, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 16, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 10 + 20, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 18, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 16, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 14, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 12, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 10, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad)

new Collider({ RTILE_WIDTH * 11 + 20, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 18, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 16, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 14, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 12, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 10, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CR_3 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 5 + 8, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 6, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 4, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 2, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 8, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 6, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 4, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 2, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 10 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CR_4 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 5 + 20, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 18, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 16, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 14, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 12, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 10, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 20, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 18, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 16, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 14, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 12, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 10, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 14, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 12, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 8, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 6, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 4, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 2, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 11, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 14, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 12, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 10, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 8, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 6, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 4, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 2, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 12, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CR_5 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 5 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 5 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 6 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 11 + 30, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 28, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 26, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 24, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 22, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 20, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 18, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 11 + 16, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 30, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 28, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 26, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 24, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 22, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 20, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 18, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 16, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad)}

#define C_CUR_CR_6 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 6 + 14, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 12, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 10, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 8, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 6, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 4, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 2, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 7 + 14, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 12, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 8, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 6, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 4, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 2, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 8, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 6, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 4, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 2, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 8, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 6, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 4, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 2, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CR_7 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 6 + 30, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 28, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 26, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 24, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 22, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 20, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 18, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 6 + 16, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 7 + 30, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 28, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 26, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 24, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 22, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 20, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 18, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 16, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 20, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 18, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 16, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 14, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 12, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 10, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad)

new Collider({ RTILE_WIDTH * 13 + 20, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 18, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 16, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 14, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 12, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 10, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_CR_8 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 6, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 7, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 12 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 12 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 13 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 13 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_LC_1 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 1 + 14, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 12, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 10, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 8, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 6, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 4, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 2, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 2 + 14, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 12, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 8, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 6, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 4, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 2, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 7 + 8, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 6, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 4, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 2, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 8, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 6, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 4, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 2, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_LC_2 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 1 + 30, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 28, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 26, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 24, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 22, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 20, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 18, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 1 + 16, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 2 + 30, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 28, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 26, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 24, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 22, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 20, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 18, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 16, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 7 + 20, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 18, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 16, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 14, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 12, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 10, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad)

new Collider({ RTILE_WIDTH * 8 + 20, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 18, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 16, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 14, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 12, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 10, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_LC_3 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2 + 8, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 6, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 4, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 2, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 3 + 8, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 6, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 4, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 2, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 7 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 7 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_LC_4 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2 + 20, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 18, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 16, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 14, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 12, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 10, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 3 + 20, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 18, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 16, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 14, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 12, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 10, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 14, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 12, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 8, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 6, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 4, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 2, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 8, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 14, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 12, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 10, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 8, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 6, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 4, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 2, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 9, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_LC_5 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 2 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 2 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 3 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 8 + 30, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 28, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 26, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 24, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 22, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 20, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 18, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 8 + 16, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 30, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 28, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 26, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 24, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 22, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 20, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 18, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 16, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad)}

#define C_CUR_LC_6 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 14, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 12, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 10, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 8, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 6, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 4, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 2, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 14, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 12, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 10, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 8, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 6, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 4, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 2, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 8, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 6, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 4, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 2, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 10 + 8, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 6, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 4, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 2, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_LC_7 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3 + 30, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 28, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 26, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 24, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 22, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 20, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 18, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 3 + 16, 0, 2, 8 }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4 + 30, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 28, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 26, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 24, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 22, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 20, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 18, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 4 + 16, 0, 2, 8 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 20, 0, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 18, 11, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 16, 21, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 14, 32, 2, 11 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 12, 43, 2, 10 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 10, 53, 2, 11 }, COL_ROAD_BORDER, ModuleRoad)

new Collider({ RTILE_WIDTH * 10 + 20, 0, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 18, 11, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 16, 21, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 14, 32, 2, 11 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 12, 43, 2, 10 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 10, 53, 2, 11 }, COL_ROAD_OUT, ModuleRoad)}

#define C_CUR_LC_8 vector<Collider*>{ 
new Collider({ RTILE_WIDTH * 3, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_OUT, ModuleRoad),

new Collider({ RTILE_WIDTH * 4, 0, RTILE_WIDTH, RTILE_HEIGHT }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 9 + 30, 0, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 28, 13, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 26, 26, 2, 12 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 24, 38, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),
new Collider({ RTILE_WIDTH * 9 + 22, 51, 2, 13 }, COL_ROAD_BORDER, ModuleRoad),

new Collider({ RTILE_WIDTH * 10 + 30, 0, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 28, 13, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 26, 26, 2, 12 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 24, 38, 2, 13 }, COL_ROAD_OUT, ModuleRoad),
new Collider({ RTILE_WIDTH * 10 + 22, 51, 2, 13 }, COL_ROAD_OUT, ModuleRoad)}

;
	 enum SEGMENT_TYPE
	 {
		 SEGMENT_FAT_A,
		 SEGMENT_FAT_B,
		 SEGMENT_THIN_A,
		 SEGMENT_THIN_B,
		 SEGMENT_THIN_L,
		 SEGMENT_THIN_R,
		 SEGMENT_2_ROADS,
		 SEGMENT_CUR_LC,
		 SEGMENT_CUR_CR,
		 SEGMENT_CUR_RC,
		 SEGMENT_CUR_CL,
		 SEGMENT_CLOSE,
		 SEGMENT_OPEN,
		 SEGMENT_BIFURCATION,
		 SEGMENT_PRE_2_BRIDGES,
		 SEGMENT_2_BRIDGES,
		 SEGMENT_POST_2_BRIDGES,
		 SEGMENT_END,
		 SEGMENT_BRIDGE,
		 SEGMENT_BRIDGE_L,
		 SEGMENT_BRIDGE_R,
	 };

	 class RoadSegment
	 {
	 public:
		 vector<RoadLine*> segment;
		 int pos;

		 RoadSegment(const SEGMENT_TYPE &type);

		 ~RoadSegment();

		 void AddRoadLine(RoadLine* line);

		 RoadLine* GetCourrentLine();

		 void GenerateSegment(const SEGMENT_TYPE &type);

		 int GetSize();

	 private:
		 void CleanSegment();
	 };

#endif // __ROADSEGMENT_H__